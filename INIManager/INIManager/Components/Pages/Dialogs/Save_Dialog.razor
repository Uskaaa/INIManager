@rendermode InteractiveServer
@using INIManager.Components.Models
@using INIManager.Components.Pages.Components
@using INIManager.Components.Services
@using INIManager.Components.Services.Interfaces
@inject ConfigurationService ConfigurationService
@inject ConfigurationDraftService ConfigurationDraftService

<MudDialog Style="width: 500px;">
    <DialogContent>
        <MudTextField @bind-Value="Configuration.Bezeichnung"
                      For="@(() => Configuration.Bezeichnung)"
                      Immediate="true"
                      Label="Name"/>
        <br>
        <MudTextField @bind-Value="Timestamp"
                      For="@(() => Configuration.Timestamp)"
                      Label="Timestamp"
                      ReadOnly="true"/>
    </DialogContent>
    <DialogActions>
        <button class="button-cancel" @onclick="Cancel">Cancel</button>
        <button class="button-save" @onclick="Submit">Save</button>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }

    [Parameter] public Configuration Configuration { get; set; }

    [Parameter] public bool Draft { get; set; }

    [Parameter] public AutoSaveStatus AutoSaveStatus { get; set; }

    [Parameter] public Headline HeadlineComponent { get; set; }

    string Timestamp = DateTime.Now.ToString("yyyy-MM-dd");

    private async Task Submit()
    {
        if (Configuration.Bezeichnung != null) await HeadlineComponent.UpdateTitle(Configuration.Bezeichnung);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        MudDialog.Close(DialogResult.Cancel());
    }

}