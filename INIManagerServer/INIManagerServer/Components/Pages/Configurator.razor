@page "/Configurator"
@page "/Configurator/{Id}"
@rendermode InteractiveServer

<style>
    .duringdrag {
        border: 1px solid black;
    }
</style>

<MudGrid>
    <MudItem xs="6">
        <MudPaper Class="pa-16 ma-2" Outlined="true">
            <MudDropContainer T="DropItem" Items="_items" ItemsSelector="@((item,dropzone) => item.Selector == dropzone)" ItemDropped="ItemUpdated" Class="d-flex flex-wrap flex-grow-1">
                <ChildContent>
                    @for (int i = 1; i <= 2; i++)
                    {
                        var dropzone = i.ToString();
                        <MudPaper Class="ma-4 flex-grow-1">
                            <MudList T="string" Class="d-flex flex-column mud-height-full">
                                <MudListSubheader>Drop Zone @dropzone</MudListSubheader>
                                <MudDropZone T="DropItem" Identifier="@dropzone" Class="flex-grow-1" />
                            </MudList>
                        </MudPaper>
                    }
                </ChildContent>
                <ItemRenderer>
                    <MudListItem  T="string" Text="@context.Name" />
                </ItemRenderer>
            </MudDropContainer>
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="pa-16 ma-2" Outlined="true">
            
        </MudPaper>
    </MudItem>
</MudGrid>

<script>
    window.addEventListener("DOMContentLoaded", () => {
        const dropZones = document.getElementsByClassName("mud-drop-zone");

        Array.from(dropZones).forEach(dropZone => {
            dropZone.addEventListener("dragover", (e) => {
                e.preventDefault();
                dropZone.classList.add("dragdrop");
            });

            dropZone.addEventListener("dragleave", () => {
                dropZone.classList.remove("dragdrop");
            });

            dropZone.addEventListener("drop", () => {
                dropZone.classList.remove("dragdrop");
            });
        });
    });
</script>

@code {

    [Parameter]
    public string Id { get; set; }
    
    private void ItemUpdated(MudItemDropInfo<DropItem> dropItem)
    {
        dropItem.Item.Selector = dropItem.DropzoneIdentifier;
    }

    private List<DropItem> _items = new()
    {
        new DropItem() { Name = "Item 1", Selector = "1" },
        new DropItem() { Name = "Item 2", Selector = "1" },
        new DropItem() { Name = "Item 3", Selector = "1" },
        new DropItem() { Name = "Item 4", Selector = "2" },
        new DropItem() { Name = "Item 5", Selector = "2" },
    };

    public class DropItem
    {
        public string Name { get; init; }
        public string Selector { get; set; }
    }
}