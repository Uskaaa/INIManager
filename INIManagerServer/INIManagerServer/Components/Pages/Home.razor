@page "/"
@using INIManagerServer.Components.Models
@using DataGridEditMode = Radzen.DataGridEditMode
@using Variant = Radzen.Variant
@inject NavigationManager navigationManager
@rendermode InteractiveServer
<MudPopoverProvider />

<div class="home-container">
    <div class="section-draft">
        <MudTable Items="@workstations" FixedHeader="@fixed_header" Hover="true" FixedFooter="@fixed_footer" Height="@(fixed_header || fixed_footer ?"400px":"")">
            <HeaderContent>
                <MudTh>Id</MudTh>
                <MudTh>Name</MudTh>
                <MudTh>Description</MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Id">@context.Id</MudTd>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd><RadzenButton Click=@(args => EditConfiguration(@context.Id)) Text="Edit" ButtonStyle="ButtonStyle.Light" /></MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>
        </MudTable>
    </div>

    <div class="section-finished">
        
    </div>
</div>

@code {
    bool fixed_header = true;
    bool fixed_footer = false;

    IEnumerable<Workstation> workstations = new List<Workstation>
    {
        new Workstation { Id = 1, Name = "Workstation 1", Description = "Description 1" },
        new Workstation { Id = 2, Name = "Workstation 2", Description = "Description 2" },
        new Workstation { Id = 3, Name = "Workstation 3", Description = "Description 3" }
    };

    protected override async Task OnInitializedAsync()
    {
        
    }
    
     void EditConfiguration(int id)
    {
        Console.WriteLine(id);
        Task.Delay(100);
        navigationManager.NavigateTo($"/Configurator/{id}");
    }
}