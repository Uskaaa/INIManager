@page "/"
@using INIManagerServer.Components.Models
@using INIManagerServer.Components.Services
@using INIManagerServer.Components.Services.Interfaces
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@inject IConfigurationService ConfigurationService
@inject ConfigurationDraftService ConfigurationDraftService
@inject IJSRuntime JSRuntime

<div class="container">
    <div class="table-container">
        <h3>Draft Configurations</h3>
        <div class="table-wrapper">
            <table id="draftTable">
                <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Workstations</th>
                    <th>Timestamp</th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>
                <!-- Table content will be populated by JavaScript -->
                </tbody>
            </table>
        </div>
    </div>

    <div class="table-container">
        <h3>Finished Configurations</h3>
        <div class="table-wrapper">
            <table id="finishedTable">
                <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Workstations</th>
                    <th>Timestamp</th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>
                <!-- Table content will be populated by JavaScript -->
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    List<Configuration> _configurations = new();
    List<Configuration> _configurationDrafts = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("initHome");
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _configurations = await ConfigurationService.ReadConfiguration();
        _configurationDrafts = await ConfigurationDraftService.ReadConfiguration();
    }

    void EditConfiguration(int id)
    {
        Console.WriteLine(id);
        Task.Delay(100);
        navigationManager.NavigateTo($"/Configurator/{id}?from=Home");
    }
}