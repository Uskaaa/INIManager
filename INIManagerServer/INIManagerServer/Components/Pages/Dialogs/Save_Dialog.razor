@rendermode InteractiveServer
@using INIManagerServer.Components.Models
@using INIManagerServer.Components.Services
@using INIManagerServer.Components.Services.Interfaces
@inject NavigationManager NavigationManager
@inject IConfigurationService ConfigurationService
@inject ConfigurationDraftService ConfigurationDraftService

<MudDialog Style="width: 500px;">
    <DialogContent>
        <MudTextField @bind-Value="Configuration.Bezeichnung"
                      For="@(() => Configuration.Bezeichnung)"
                      Immediate="true"
                      Label="Name" />
        <br>
        <MudTextField @bind-Value="Timestamp"
                      For="@(() => Configuration.Timestamp)"
                      Label="Timestamp" 
                      ReadOnly="true"/>
    </DialogContent>
    <DialogActions>
        <button class="button-cancel" @onclick="Cancel">Cancel</button>
        <button class="button-save"  @onclick="Submit">Save</button>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    
    [Parameter]
    public Configuration Configuration { get; set; }

    string Timestamp = DateTime.Now.ToString("yyyy-MM-dd");

    private async void Submit()
    {
        if (Configuration.Type == TypeOfConfiguration.Draft) await ConfigurationDraftService.CreateConfiguration(Configuration);
        else if (Configuration.Type == TypeOfConfiguration.Finished) await ConfigurationService.CreateConfiguration(Configuration);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        MudDialog.Close(DialogResult.Cancel());
    }
}